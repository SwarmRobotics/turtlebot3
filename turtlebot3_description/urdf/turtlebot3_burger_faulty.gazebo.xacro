<?xml version="1.0"?>
<robot name="turtlebot3_burger_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual" default="false"/>
  <xacro:arg name="imu_visual"   default="false"/>

 

 <gazebo reference="base_link_$(arg number)">
      <material>Gazebo/DarkGrey</material>
    <sensor type="contact" name="collision_base_$(arg number)">
       <plugin name="collision_plugin" filename="libgazebo_ros_bumper2.so">
       <bumperTopicName>bump</bumperTopicName>
          <frameName>base_link_$(arg number)</frameName>
        </plugin>
         <contact>
          <collision>base_footprint_$(arg number)_fixed_joint_lump__base_col_collision</collision>
      </contact> 
              <update_rate> 100 </update_rate>
  </sensor>
</gazebo>

 <!--  <mu1>0.5</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>5.0</kd> -->
  <gazebo reference="wheel_left_link_$(arg number)">
<mu1>0.2</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>05.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
     <sensor type="contact" name="collision_lw_$(arg number)">
       <plugin name="collision_plugin" filename="libgazebo_ros_bumper2.so">
       <bumperTopicName>bump</bumperTopicName>
          <frameName>base_link_$(arg number)</frameName>
        </plugin>
         <contact>
          <collision>wheel_left_link_$(arg number)_collision</collision>
      </contact> 
              <update_rate> 100 </update_rate>
  </sensor>
  </gazebo>

  <gazebo reference="wheel_right_link_$(arg number)">
<mu1>0.2</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0</kp>
    <kd>05.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
     <sensor type="contact" name="collision_rw_$(arg number)">
       <plugin name="collision_plugin" filename="libgazebo_ros_bumper2.so">
       <bumperTopicName>bump</bumperTopicName>
          <frameName>base_link_$(arg number)</frameName>
        </plugin>
         <contact>
          <collision>wheel_right_link_$(arg number)_collision</collision>
      </contact> 
              <update_rate> 100 </update_rate>
  </sensor>
  </gazebo>



<!-- <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd> -->

  <gazebo reference="caster_back_link_$(arg number)">
   <mu1>0.05</mu1>
    <mu2>0.05</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="imu_link_$(arg number)">
    <sensor type="imu" name="imu_$(arg number)">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo>
    <plugin name="turtlebot3_burger_controller_$(arg number)" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint_$(arg number)</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint_$(arg number)</leftJoint>
      <rightJoint>wheel_right_joint_$(arg number)</rightJoint>
      <wheelSeparation>0.160</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
<!--
  <gazebo>
    <plugin name="imu_plugin_$(arg number)" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link_$(arg number)</bodyName>
      <frameName>imu_link_$(arg number)</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.001</gaussianNoise>
      <updateRate>100</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>
-->

  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>burger_$(arg number)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link_$(arg number)</bodyName>
      <topicName>imu</topicName>
      <accelDrift>0.000 0.000 0.000</accelDrift>
      <accelGaussianNoise>0.01 0.01 0.01</accelGaussianNoise>
      <rateDrift>0.00 0.00 0.00 </rateDrift>
      <rateGaussianNoise>0.05 0.05 0.05 </rateGaussianNoise>
      <headingDrift>0.00</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>


  <gazebo reference="base_scan_$(arg number)">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="lds_lfcd_sensor_$(arg number)">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>3.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller_$(arg number)" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan_$(arg number)</frameName>
      </plugin>
    </sensor>
  </gazebo>


   <gazebo>
    <plugin name="magnetic_controller" filename="libhector_gazebo_ros_magnetic.so">
      <robotNamespace>burger_$(arg number)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link_$(arg number)</bodyName>
      <topicName>magnetic_field</topicName>
       <referenceHeading>0.0</referenceHeading>
      <declination>0</declination>
      <inclination>-68</inclination>
      <magnitude> 1 </magnitude>
      <offset>0 0 0</offset>
       <driftFrequency>0.00 0.00 0.00</driftFrequency>
      <gaussianNoise>0.01 0.01 0.01</gaussianNoise>
      <useMagneticFieldMsgs>true</useMagneticFieldMsgs>
    </plugin>
  </gazebo>
 
  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps_faulty.so">
      <robotNamespace>burger_$(arg number)</robotNamespace>
      <updateRate>10</updateRate>
      <time_offset>$(arg number)</time_offset>
      <bodyName>base_link_$(arg number)</bodyName>
      <frameId>base_link_$(arg number)</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceLatitude>49.9</referenceLatitude>
      <time_fault>10</time_fault> <!--  time in seconds after simulation start when the GPS stops working -->
     <location_fault>false</location_fault>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.000 0.000 0.000</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <alwayson>true</alwayson>
    </plugin>
  </gazebo>
</robot>
